CREATE DATABASE multi_tenant;

\c multi_tenant

CREATE TABLE clientes (
  id SERIAL PRIMARY KEY,
  nome TEXT NOT NULL,
  whatsapp_number TEXT UNIQUE NOT NULL,
  ativo BOOLEAN DEFAULT true,
  db_host TEXT NOT NULL,
  db_port INT NOT NULL,
  db_name TEXT NOT NULL,
  db_user TEXT NOT NULL,
  db_password TEXT NOT NULL
);
ALTER TABLE CLIENTES ADD DB_VERSION VARCHAR(10);

ALTER TABLE CONVERSAS ADD LINK VARCHAR(500);


-- Tabela de fluxos (respostas automáticas)
CREATE TABLE fluxos (
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cliente_id  INTEGER NOT NULL,
    chave       VARCHAR(50) NOT NULL,    -- ex: 'saudacao', 'faq_horarios'
    conteudo    VARCHAR(1000) NOT NULL,  -- texto da resposta
    FOREIGN KEY (cliente_id) REFERENCES clientes(id)
);

-- Tabela de conversas (histórico)
CREATE TABLE conversas (
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cliente_id   INTEGER NOT NULL,
    user_number  VARCHAR(20) NOT NULL,    -- número do usuário final
    mensagem     VARCHAR(1000) NOT NULL,  -- mensagem recebida
    resposta     VARCHAR(1000),           -- mensagem enviada
    data_hora    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (cliente_id) REFERENCES clientes(id)
);


INSERT INTO clientes
  (nome, whatsapp_number, db_host, db_port, db_name, db_user, db_password)
VALUES
  ('Cliente Teste', 'whatsapp:+17816788032', '127.0.0.1', 5432, 'cliente1', 'postgres', 'senha');


INSERT INTO fluxos (cliente_id, chave, conteudo)
VALUES (1, 'saudacao', 'Olá, bem-vindo à Clínica ABC!');

INSERT INTO fluxos (cliente_id, chave, conteudo)
VALUES (1, 'faq_horarios', 'Atendemos de segunda a sexta, das 8h às 18h.');

INSERT INTO fluxos (cliente_id, chave, conteudo)
VALUES (1, 'faq_endereco', 'Estamos na Rua das Flores, 123, Centro.');


INSERT INTO conversas (cliente_id, user_number, mensagem, resposta)
VALUES (1, 'whatsapp:+5511988887777', 'Oi, quais são os horários?', 'Atendemos de segunda a sexta, das 8h às 18h.');


~//////////////////////
comandos sql rodados>
                                                                          SELECT CHAVECTE, CTEREF, CTEANU
FROM TABCTRC
WHERE CHAVECTE = '42250605638569000109570030001070881060219566';


SELECT * FROM TABcomprovante



SELECT CTE_CHAVECTE FROM TABMOVTRA;





select CHAVECTE, NOMOVTRA FROM TABCTRC;

select * from tabcli_cont

select * from tabcli_cont where nocli = 24166;


left join tabcli on tabcli.nocli = tabcli_cont.nocli
where (tabcli.mot = 'T' or tabcli.prop = 'T')
  and tabcli_cont.tipotel = 'CELULAR'
  and tabcli_cont.ddd = '47'
    and replace(
          replace(
            replace(
              replace(
                replace(tabcli_cont.telefone, '-', ''), 
              ' ', ''), 
            '(', ''), 
          ')', ''), 
        '.', '') = '97832453'
  and (tabcli.inativo = 'F' or tabcli.inativo is null)
  and (tabcli.bloquearmot = 'F' or tabcli.bloquearmot is null);

  SELECT * FROM TABMDFE ;

  SELECT nomovtra, chavecte FROM TABCTRC;



  select * from tabcli where nocli = 1782;

  SELECT * FROM TABMOVTRA WHERE NOMOVTRA = 158;

  SELECT * FROM TABMOVTRA_OCO;

SELECT CAST('now' AS TIME) FROM rdb$database;   



SELECT nomovtra, DATA, HORA, OBS, USUARIO FROM TABMOVTRA_OCO;



SELECT mot.CGCCLI AS CPF
    FROM TABMOVTRA m
    JOIN TABCLI mot ON mot.NOCLI = m.NOMOT
    WHERE m.NOMOVTRA = 158





        SELECT COALESCE(MAX(NOITEM), 0) + 1 AS PROX_ITEM
    FROM TABMOVTRA_OCO
    WHERE NOMOVTRA = 158




-- Tabela de clientes (respostas automáticas)
CREATE TABLE CLIENTES (
    ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    WHATSAPP_NUMBER VARCHAR(21) UNIQUE NOT NULL,
    ATIVO SMALLINT DEFAULT 1,
    DB_PATH VARCHAR(255) NOT NULL,
    DB_USER VARCHAR(50) NOT NULL,
    DB_PASSWORD VARCHAR(50) NOT NULL
    DB_VERSION VARCHAR(10)
);

ALTER TABLE CLIENTES ADD DB_VERSION VARCHAR(10);

INSERT INTO CLIENTES (NOME, WHATSAPP_NUMBER, DB_PATH, DB_USER, DB_PASSWORD)
VALUES ('SIAGRANS', 'whatsapp:+17816788032', 'C:/Siserv/Clientes/SIGATRANS/DATABASE.GDB', 'SYSDBA', 'masterkey');


INSERT INTO CLIENTES (
  ID, NOME, WHATSAPP_NUMBER, DB_HOST, DB_PORT, DB_PATH, DB_USER, DB_PASSWORD
) VALUES (
  1, 'SIGAGRANS', 'whatsapp:+17816788032',
  '127.0.0.1', 3050, 'C:/Siserv/Clientes/SIGATRANS/DATABASE.GDB',
  'SYSDBA', 'masterkey'
);



SELECT * FROM CLIENTES;

-- Tabela de fluxos (respostas automáticas)
CREATE TABLE fluxos (
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cliente_id  INTEGER NOT NULL,
    chave       VARCHAR(50) NOT NULL,    -- ex: 'saudacao', 'faq_horarios'
    conteudo    VARCHAR(1000) NOT NULL,  -- texto da resposta
    FOREIGN KEY (cliente_id) REFERENCES clientes(id)
);

-- Tabela de conversas (histórico)
CREATE TABLE conversas (
    id           INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cliente_id   INTEGER NOT NULL,
    user_number  VARCHAR(20) NOT NULL,    -- número do usuário final
    mensagem     VARCHAR(1000) NOT NULL,  -- mensagem recebida
    resposta     VARCHAR(1000),           -- mensagem enviada
    data_hora    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (cliente_id) REFERENCES clientes(id)
);



INSERT INTO clientes (nome, whatsapp_number, provider, token)
VALUES ('Clínica Teste', 'whatsapp:+17816788032', 'twilio', 'TOKEN_TWILIO_ABC');






drop table conversas;
drop table fluxos;
drop table menus;
drop table clientes;








FIREBIRD 2.5



-- Criar tabela
CREATE TABLE CLIENTES (
    ID INTEGER NOT NULL,
    NOME VARCHAR(100) NOT NULL,
    WHATSAPP_NUMBER VARCHAR(21) UNIQUE NOT NULL,
    ATIVO SMALLINT DEFAULT 1,
    DB_PATH VARCHAR(255) NOT NULL,
    DB_USER VARCHAR(50) NOT NULL,
    DB_PASSWORD VARCHAR(50) NOT NULL,
    DB_VERSION VARCHAR(10),
    CONSTRAINT PK_CLIENTES PRIMARY KEY (ID)
);

-- Criar generator (sequência) para ID
CREATE GENERATOR GEN_CLIENTES_ID;

-- Definir valor inicial do generator
SET GENERATOR GEN_CLIENTES_ID TO 0;

-- Criar trigger para auto-incremento
SET TERM !! ;
CREATE TRIGGER CLIENTES_BI FOR CLIENTES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID IS NULL) THEN
    NEW.ID = GEN_ID(GEN_CLIENTES_ID, 1);
END!!
SET TERM ; !!


INSERT INTO CLIENTES (NOME, WHATSAPP_NUMBER, ATIVO, DB_PATH, DB_USER, DB_PASSWORD, DB_VERSION)
VALUES ('SIGATRANS', 'whatsapp:+15557977042', 1, 'C:/Siserv/Clientes/SIGATRANS/DATABASE.GDB', 'SYSDBA', 'masterkey', '2.5');


CREATE TABLE MENUS (
    ID INTEGER NOT NULL,
    CLIENTE_ID INTEGER NOT NULL,
    TITULO VARCHAR(100) NOT NULL,
    ATIVO SMALLINT DEFAULT 1,
    CONSTRAINT PK_MENUS PRIMARY KEY (ID),
    CONSTRAINT FK_MENUS_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTES(ID)
);



CREATE TABLE MENU_OPCOES (
    ID INTEGER NOT NULL,
    MENU_ID INTEGER NOT NULL,
    OPCAO_TEXTO VARCHAR(100) NOT NULL,
    RESPOSTA_TEXTO VARCHAR(255),
    DESTINO_MENU_ID INTEGER,
    CONSTRAINT PK_MENU_OPCOES PRIMARY KEY (ID),
    CONSTRAINT FK_MENU_OPCOES_MENU FOREIGN KEY (MENU_ID) REFERENCES MENUS(ID),
    CONSTRAINT FK_MENU_OPCOES_DESTINO FOREIGN KEY (DESTINO_MENU_ID) REFERENCES MENUS(ID)
);

CREATE TABLE MENU_OPCOES ( ID INTEGER NOT NULL, MENU_ID INTEGER NOT NULL, CHAVE_PAI VARCHAR(50) NOT NULL, OPCAO VARCHAR(10) NOT NULL, TEXTO VARCHAR(255), PROXIMA_CHAVE VARCHAR(50), ORDEM INTEGER, CONSTRAINT PK_MENU_OPCOES PRIMARY KEY (ID), CONSTRAINT FK_MENU_OPCOES_MENU FOREIGN KEY (MENU_ID) REFERENCES MENUS(ID) );



-- 1. Remover a constraint UNIQUE existente
ALTER TABLE CLIENTES DROP CONSTRAINT INTEG_2543;

-- 2. Alterar o tamanho do campo
ALTER TABLE CLIENTES ALTER WHATSAPP_NUMBER TYPE VARCHAR(32);

-- 3. Recriar a constraint UNIQUE
ALTER TABLE CLIENTES ADD CONSTRAINT UQ_CLIENTES_WHATSAPP UNIQUE (WHATSAPP_NUMBER);


-- tamanho do campo
SELECT f.RDB$FIELD_NAME   AS CAMPO,
       ff.RDB$FIELD_LENGTH AS TAMANHO,
       ff.RDB$CHARACTER_SET_ID AS CS_ID
FROM RDB$RELATION_FIELDS f
JOIN RDB$FIELDS ff ON ff.RDB$FIELD_NAME = f.RDB$FIELD_SOURCE
WHERE f.RDB$RELATION_NAME = 'CLIENTES'
  AND f.RDB$FIELD_NAME = 'WHATSAPP_NUMBER';

-- constraints ativas
SELECT rc.RDB$CONSTRAINT_NAME, rc.RDB$CONSTRAINT_TYPE, seg.RDB$FIELD_NAME
FROM RDB$RELATION_CONSTRAINTS rc
JOIN RDB$INDEX_SEGMENTS seg ON rc.RDB$INDEX_NAME = seg.RDB$INDEX_NAME
WHERE rc.RDB$RELATION_NAME = 'CLIENTES';



SELECT
  ID,
  NOME,
  TRIM(WHATSAPP_NUMBER) AS WHATSAPP_NUMBER,
  ATIVO,
  DB_PATH,
  DB_VERSION
FROM CLIENTES
ORDER BY ID;
